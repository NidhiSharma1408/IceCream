# Generated by Django 3.2.4 on 2021-06-13 16:38

import Core.models
import Core.validators
import ckeditor.fields
import ckeditor_uploader.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AlumniRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('batch', models.CharField(max_length=4)),
                ('contact_no', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(regex='^[56789]\\d{9}$')])),
                ('message', models.CharField(blank=True, max_length=500, null=True)),
                ('date', models.CharField(blank=True, choices=[('22 September(Sunday)', '22 September(Sunday)'), ('29 September(Sunday)', '29 September(Sunday)'), ('2  October(Wednesday)', '2 October(Wednesday)')], max_length=200, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=80)),
                ('author', models.CharField(max_length=30)),
                ('content', ckeditor_uploader.fields.RichTextUploadingField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=5)),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name_plural': 'Branches',
            },
        ),
        migrations.CreateModel(
            name='ContactInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('active', models.BooleanField(default=False)),
                ('member_name', models.CharField(max_length=255)),
                ('contact_number', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'contact_information',
            },
        ),
        migrations.CreateModel(
            name='ContactUs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('contact', models.BigIntegerField()),
                ('email', models.EmailField(max_length=50)),
                ('subject', models.CharField(max_length=255)),
                ('message', models.CharField(max_length=500)),
            ],
            options={
                'verbose_name_plural': 'contact us',
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Designations',
            },
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=False, validators=[Core.models.event_validator])),
                ('pic_path', models.FileField(default=None, null=True, upload_to=Core.models.events_upload_location)),
            ],
        ),
        migrations.CreateModel(
            name='Gender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('description', models.CharField(max_length=225)),
                ('completion_year', models.IntegerField(default=None, null=True)),
                ('image_path', models.FileField(default=None, null=True, upload_to=Core.models.projects_upload_location)),
            ],
            options={
                'verbose_name_plural': 'Projects',
            },
        ),
        migrations.CreateModel(
            name='Technology',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Technologies',
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField()),
                ('active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['value'],
            },
        ),
        migrations.CreateModel(
            name='Member',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('presently_at', models.CharField(blank=True, max_length=225)),
                ('is_alumni', models.BooleanField(default=False)),
                ('batch', models.IntegerField()),
                ('pic_path', models.FileField(default=None, null=True, upload_to=Core.models.members_upload_location)),
                ('facebook', models.CharField(default=None, max_length=225, null=True)),
                ('github', models.CharField(default=None, max_length=225, null=True)),
                ('linkedin', models.CharField(default=None, max_length=225, null=True)),
                ('testimonial', models.TextField(blank=True, default=None, max_length=500, null=True)),
                ('message', models.TextField(default='LOVE-PEACE-CODE', max_length=500, null=True)),
                ('email', models.EmailField(blank=True, default=None, max_length=225, null=True)),
                ('phone', models.CharField(blank=True, default=None, max_length=10, null=True)),
                ('slug', models.SlugField(blank=True, max_length=255, null=True)),
                ('designation', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Core.designation')),
                ('technology', models.ManyToManyField(to='Core.Technology')),
            ],
            options={
                'verbose_name_plural': 'Members',
                'ordering': ['batch'],
            },
        ),
        migrations.CreateModel(
            name='EmailContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail_allowed', models.BooleanField(default=False)),
                ('subject', models.CharField(max_length=100)),
                ('text', ckeditor.fields.RichTextField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.event')),
            ],
        ),
        migrations.CreateModel(
            name='EmailAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('files', models.FileField(default=None, null=True, upload_to=Core.models.events_upload_location)),
                ('name', models.CharField(max_length=80, validators=[Core.validators.validate_file_extension])),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.event')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=225)),
                ('college_email', models.EmailField(max_length=254)),
                ('contact', models.CharField(max_length=10)),
                ('whatsapp_no', models.CharField(max_length=10)),
                ('student_number', models.CharField(max_length=8)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('skills', models.CharField(blank=True, max_length=500)),
                ('other_handles', models.CharField(blank=True, max_length=500)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.branch')),
                ('domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.domain')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.event')),
                ('gender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Core.gender')),
            ],
            options={
                'unique_together': {('student_number', 'event')},
            },
        ),
    ]
